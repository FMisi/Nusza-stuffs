% ===== Double_integral =====

% Trapézszabály megvalósítása
function result = trapezoidal_integral(f, a, b, n)
    % f: integrálandó függvény
    % a: alsó határ
    % b: felső határ
    % n: intervallumok száma

    h = (b - a) / n;  % lépésköz
    x = a:h:b;        % osztópontok
    y = f(x);         % függvényértékek az osztópontokban

    % Trapézszabály képlete
    result = h * (0.5 * y(1) + sum(y(2:end-1)) + 0.5 * y(end));
end

% Példa: f(x) = x^2, [0, 2] intervallum, 10 részintervallum
f = @(x) x.^2;
a = 0;
b = 2;
n = 10;

result = trapezoidal_integral(f, a, b, n);
fprintf('A közelítő integrál eredménye: %.6f\n', result);

% Kettős integrál trapézszabállyal
function result = trapezoidal_double_integral(f, a, b, c, d, nx, ny)
    % f: integrálandó függvény, pl. @(x, y) x^2 + y^2
    % [a, b]: x-intervallum
    % [c, d]: y-intervallum
    % nx, ny: intervallumok száma x és y irányban

    hx = (b - a) / nx;  % x-lépésköz
    hy = (d - c) / ny;  % y-lépésköz

    x = linspace(a, b, nx+1);  % x-értékek
    y = linspace(c, d, ny+1);  % y-értékek

    % Trapézszabály alkalmazása
    result = 0;
    for i = 1:nx+1
        for j = 1:ny+1
            weight = 1;
            if i == 1 || i == nx+1
                weight = weight / 2;
            end
            if j == 1 || j == ny+1
                weight = weight / 2;
            end
            result = result + weight * f(x(i), y(j));
        end
    end
    result = result * hx * hy;
end

% Példa: f(x, y) = x^2 + y^2, [0, 1] x [0, 1] intervallum, 10x10 felosztás
f = @(x, y) x.^2 + y.^2;
a = 0; b = 1; c = 0; d = 1;
nx = 10; ny = 10;

result = trapezoidal_double_integral(f, a, b, c, d, nx, ny);
fprintf('A kettős integrál eredménye: %.6f\n', result);
